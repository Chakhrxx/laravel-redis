openapi: 3.1.0
info:
  title: Swagger Laravel - OpenAPI 3.0
  description: |-
    This is a sample User CRUD based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io).

    [The source code](https://github.com/Chakhrxx/laravel-redis):
    - `https://github.com/Chakhrxx/laravel-redis`
  contact:
    email: chakhree.h@gmail.com
  version: 1.0.11
externalDocs:
  description: Find more project
  url: https://github.com/Chakhrxx
servers:
  - url: http://127.0.0.1:8000
tags:
  - name: User
    description: Route about User
paths:
  /api/v1/user:
    get:
      tags:
        - User
      summary: List all users
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found!
                  status:
                    type: integer
                    example: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error!
                  status:
                    type: integer
                    example: 500

    post:
      tags:
        - User
      summary: Create a user
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "201":
          description: User has been created successfully!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found!
                  status:
                    type: integer
                    example: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error!
                  status:
                    type: integer
                    example: 500

  /api/v1/user/{id}:
    get:
      tags:
        - User
      summary: Get a user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found!
                  status:
                    type: integer
                    example: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error!
                  status:
                    type: integer
                    example: 500

    put:
      tags:
        - User
      summary: Update a user by ID
      parameters:
        - name: id
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
          application/x-www-form-urlencoded:
            schema:
              $ref: "#/components/schemas/User"
        required: true
      responses:
        "200":
          description: User has been updated successfully!
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found!
                  status:
                    type: integer
                    example: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error!
                  status:
                    type: integer
                    example: 500

    delete:
      tags:
        - User
      summary: Delete a user by ID
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: No Content
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User has been deleted successfully!
                  status:
                    type: integer
                    example: 204
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User not found!
                  status:
                    type: integer
                    example: 404
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Internal Server Error!
                  status:
                    type: integer
                    example: 500

components:
  schemas:
    User:
      required:
        - name
        - email
        - address
        - phone
        - password
      type: object
      properties:
        name:
          type: string
          example: Braxton Abbott
        email:
          type: string
          example: eldridge.macejkovic@example.org
        address:
          type: string
          example: 42079 Waelchi Place Robertborough, UT 37362
        phone:
          type: string
          example: (484) 244-7966
        password:
          type: string
          example: 123456789
  securitySchemes:
    apiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
